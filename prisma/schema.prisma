// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Province {
  id          String     @id
  displayName String
  districts   District[]
  
}

model District {
  id          String   @id
  displayName String
  wards       Ward[]
  province    Province @relation(fields: [provinceId], references: [id])
  provinceId  String
}

model Ward {
  id          String @id
  displayName String

  district   District @relation(fields: [districtId], references: [id])
  districtId String
}


model Department {
  id       Int        @id @default(autoincrement())
  name     String
  Employee Employee[]
}

model Employee {
  id                    Int       @id @default(autoincrement())
  employeeCode          String?   
  employeeStatus        String?
  firstName             String?
  lastName              String?
  fullName              String?
  gender                String?
  hireDate              String?
  identifyNumber        String?
  identifyNumberIssuedDate DateTime?
  identifyNumberExpiredDate DateTime?
  identifyNumberIssuedPlace String?


  salaryProbationary     Int?
  salaryProductivity     Int?
  salarySocialInsurance Int?
  salaryTotal           Int?
  receiveDate           DateTime?
  mobilePhone           String?
  officePhone           String?
  homePhone             String?
  officeEmail           String?
  otherEmail            String?
  birthDay              DateTime?

  pitCode  String?

  ethnic String?
  nationality  String?


probationDate  DateTime?
                  

internalOfficialDate DateTime?
                   
socialInsuranceOfficialDate DateTime?

  healthInsuranceOfficialDate DateTime?
                   
  bankAccountNo String?
  bankName String?

  department     Department? @relation(fields: [departmentId], references: [id])
  departmentId   Int?
  departmentName String?


  jobPosition     JobPosition? @relation(fields: [jobPositionId], references: [id])
  jobPositionId   Int?
  jobPositionName String?

  laborNature LaborNature? @relation(fields: [laborNatureId], references: [id])
  laborNatureId Int?
  laborNatureName String?

  contractTypeName String?




currentAddress String?

nativeAddress String?


  maritalStatus MaritalStatus?
  identificationType IdentificationType?
  religion Religion?
  employeeStatusName EmployeeStatusName?
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

}



model Contract {
  id     Int      @id @default(autoincrement())
  contractNo String?
  startDate DateTime?
  endDate DateTime?
  jobPositionName String?
  jobPositionID Int?
  employeeName String?
  signedDate DateTime?
  salaryBasic Int?
  salaryForInsurance Int?
  signStatus SignStatus?
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Country {
  id Int       @id @default(autoincrement())
  name          String
}
     
model LaborNature {
  id Int       @id @default(autoincrement())
  name          String
    Employee Employee[]

}

model JobPosition {
  id Int       @id @default(autoincrement())
  name          String
  Employee Employee[]

}

model ContractType {
  id Int       @id @default(autoincrement())
  name          String

}


model Ethnicity {
   id Int       @id @default(autoincrement())
    name          String
}


model Organization {
  id Int       @id @default(autoincrement())
  name          String
  address String
}
enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
}

enum Religion {
  NON
  ISLAMIC
  BUDDHISM
  HOAHAO_BUDDHISM
  CHRISTIAN
  PROTESTANTISM
}

enum IdentificationType {
  CCCD
  CMND
}

enum EmployeeStatusName {
  WORKING
  RESIGNED
}

enum SignStatus {
  NON
  SIGNED
}

