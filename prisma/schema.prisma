// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Province {
  id          String     @id
  displayName String
  districts   District[]
  employeesCurrentProvince  Employee[] @relation("currentProvince")
  employeesNativeProvince   Employee[] @relation("nativeProvince")
  
}

model District {
  id          String   @id
  displayName String
  wards       Ward[]
  province    Province @relation(fields: [provinceId], references: [id])
  provinceId  String

   employeesCurrentDistrict  Employee[] @relation("currentDistrict")
  employeesNativeDistrict   Employee[] @relation("nativeDistrict")
}

model Ward {
  id          String @id
  displayName String

  district   District @relation(fields: [districtId], references: [id])
  districtId String


   employeesCurrentWard  Employee[] @relation("currentWard")
  employeesNativeWard   Employee[] @relation("nativeWard")
}


model Department {
  id       Int        @id @default(autoincrement())
  name     String
  Employee Employee[]
}

model Employee {
  id                    Int       @id @default(autoincrement())
  employeeCode          String?   
  employeeStatus        String?
  firstName             String?
  lastName              String?
  fullName              String?
  gender                String?
  hireDate              String?
  identifyNumber        String?
  identifyNumberIssuedDate DateTime?
  identifyNumberExpiredDate DateTime?
  identifyNumberIssuedPlace String?


  salaryProbationary     Int?
  salaryBasic           Int?
  salarySocialInsurance Int?
  receiveDate           DateTime?
  mobilePhone           String?
  officePhone           String?
  homePhone             String?
  officeEmail           String?
  otherEmail            String?
  birthDay              DateTime?
  birthPlace String?

  bankAccountNo String?
  bankName String?

  department     Department? @relation(fields: [departmentId], references: [id])
  departmentId   Int?
  departmentName String?


  jobPosition     JobPosition? @relation(fields: [jobPositionId], references: [id])
  jobPositionId   Int?
  jobPositionName String?

  laborNature LaborNature? @relation(fields: [laborNatureId], references: [id])
  laborNatureId Int?
  laborNatureName String?

  contractType ContractType? @relation(fields: [contractTypeId], references: [id])
  contractTypeId Int?
  contractTypeName String?


currentCountry Country? @relation(name: "currentCountry", fields: [currentCountryID], references: [id])
currentCountryID Int? 
currentCountryName String?

currentProvince Province? @relation(name: "currentProvince", fields: [currentProvinceID], references: [id])
currentProvinceID String?   
currentProvinceName String?


currentDistrict District? @relation(name: "currentDistrict", fields: [currentDistrictID], references: [id])
currentDistrictID String?
currentDistrictName String?



currentWard Ward? @relation(name: "currentWard", fields: [currentWardID], references: [id])
currentWardID String?
currentWardName String?

currentStreetHouseNumber  String?

currentAddress String?



nativeCountry Country? @relation(name: "nativeCountry", fields: [nativeCountryID], references: [id])
nativeCountryID Int? 
nativeCountryName String?

nativeProvince Province? @relation(name: "nativeProvince", fields: [nativeProvinceID], references: [id])
nativeProvinceID String?   
nativeProvinceName String?


nativeDistrict District? @relation(name: "nativeDistrict", fields: [nativeDistrictID], references: [id])
nativeDistrictID String?
nativeDistrictName String?



nativeWard Ward? @relation(name: "nativeWard", fields: [nativeWardID], references: [id])
nativeWardID String?  
nativeWardName String?

nativeStreetHouseNumber  String?

nativeAddress String?


  maritalStatus MaritalStatus?
  identificationType IdentificationType?
  religion Religion?
  employeeStatusName EmployeeStatusName?
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

}



model Contract {
  id     Int       @id @default(autoincrement())
  contractNo String?
  startDate DateTime?
  endDate DateTime?
  
  jobPositionName String?
  jobPositionID Int?
  employeeName String?
  signedDate DateTime?
 salaryBasic Int?
 salaryForInsurance Int?
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Country {
  id Int       @id @default(autoincrement())
  name          String
  employeesCurrent  Employee[] @relation("currentCountry")
  employeesNative   Employee[] @relation("nativeCountry")
}
     
model LaborNature {
  id Int       @id @default(autoincrement())
  name          String
    Employee Employee[]

}

model JobPosition {
  id Int       @id @default(autoincrement())
  name          String
  Employee Employee[]

}

model ContractType {
  id Int       @id @default(autoincrement())
  name          String
    Employee Employee[]

}


model Ethnicity {
   id Int       @id @default(autoincrement())
    name          String
}

enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
}

enum Religion {
  NON
  ISLAMIC
  BUDDHISM
  HOAHAO_BUDDHISM
  CHRISTIAN
  PROTESTANTISM
}

enum IdentificationType {
  CCCD
  CMND
}

enum EmployeeStatusName {
  WORKING
  RESIGNED
}



